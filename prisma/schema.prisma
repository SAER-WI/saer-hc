// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Userhc {
  id                   Int                    @id @default(autoincrement())
  email                String                 @unique
  firstname            String
  lastname             String
  password             String
  admin                Boolean                @default(false)
  logs                 ActivityLoghc[]
  PasswordResetTokenhc PasswordResetTokenhc[]
}

model ActivityLoghc {
  id       Int      @id @default(autoincrement())
  user     Userhc   @relation(fields: [userId], references: [id])
  userId   Int
  lessonId String
  date     DateTime
}

model PasswordResetTokenhc {
  id        Int       @id @default(autoincrement())
  token     String    @unique
  createdAt DateTime  @default(now())
  resetAt   DateTime?

  user   Userhc @relation(fields: [userId], references: [id])
  userId Int
}

model User {
  id                 Int                  @id @default(autoincrement())
  email              String               @unique
  firstname          String
  lastname           String
  password           String
  approved           Boolean              @default(false)
  admin              Boolean              @default(false)
  blocked            Boolean              @default(false)
  logs               ActivityLog[]
  PasswordResetToken PasswordResetToken[]
}

model ActivityLog {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  lessonId String
  date     DateTime
}

model PasswordResetToken {
  id        Int       @id @default(autoincrement())
  token     String    @unique
  createdAt DateTime  @default(now())
  resetAt   DateTime?

  user   User @relation(fields: [userId], references: [id])
  userId Int
}
